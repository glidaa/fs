.TextFieldShell {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  & > label {
    width: max-content;
    margin-bottom: 0;
    color: var(--color-fill-color-text-primary);
    font-size: 0.875rem;
    cursor: text;
    transition: color 0.2s;
  }
  & > span {
    margin-left: 10px;
    color: var(--color-fill-color-system-critical);
    font-size: 0.75rem;
  }
  &.disabled {
    .TextFieldContainer {
      background-color: var(--color-fill-color-control-disabled);
      &, & * {
        color: var(--color-fill-color-text-disabled);
      }
    }
    &, & * {
      cursor: not-allowed;
    }
  }
  gap: 5px;
}

.TextFieldContainer {
  display: flex;
  position: relative;
  flex-direction: row;
  align-items: center;
  justify-content: flex-start;
  width: calc(100% - 24px);
  padding: 6px 10px;
  border: 1px solid transparent;
  border-radius: 4px;
  border-color: var(--color-stroke-color-card-stroke-default);
  border-bottom-color: var(--color-stroke-color-control-strong-stroke-default);
  background-color: var(--color-fill-color-control-default);
  font-size: 0.875rem;
  cursor: text;
  & > span {
    color: var(--color-fill-color-text-secondary);
  }
  & > input {
    z-index: 1;
    width: 100%;
    padding: 0;
    border: none;
    outline: none;
    background-color: transparent;
    color: var(--color-fill-color-text-primary);
    caret-color: var(--color-fill-color-text-primary);
    font-size: 0.875rem;
    &:disabled {
      background-color: transparent;
    }
    &::placeholder {
      color: var(--color-fill-color-text-secondary);
    }
  }
  &::after {
    position: absolute;
    bottom: -1px;
    left: -1px;
    width: calc(100% + 2px);
    height: 0;
    content: "";
  }
  &:hover:not(:focus-within) {
    background-color: var(--color-fill-color-control-secondary);
  }
  &:focus-within:not(.readOnly:not(.filled)) {
    border-radius: 4px 4px 0 0;
    background-color: var(--color-fill-color-control-input-active);
    &::after {
      height: 2px;
      background-color: var(--color-fill-color-accent-primary);
    }
  }
  &.error {
    border-color: var(--color-fill-color-system-critical) !important;
  }
  & *:not(input) {
    color: var(--outline);
  }
}

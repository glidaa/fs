.TextareaContainer {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: center;
  & > div {
    position: relative;
    display: grid;
    width: calc(100% - 24px);
    padding: 10px;
    border-radius: 8px;
    border: 1px solid transparent;
    background-color: transparent;
    @include themify(border-color, "outline");
    & > label {
      position: absolute;
      top: 1px;
      left: 0px;
      margin-bottom: 0;
      width: max-content;
      font-size: 14px;
      font-weight: 600;
      padding: 0 3px;
      margin-left: -3px;
      transform-origin: bottom left;
      transform: scale(1) translate3d(10px, 10px, 0);
      transition: transform 150ms cubic-bezier(0.4,0,0.2,1);
      @include themify(color, "outline");
      @include themify(background-color, "secondaryBg");
    }
    &::after {
      content: attr(data-replicated-value) " ";
      white-space: pre-wrap;
      visibility: hidden;
    }
    & > textarea {
      resize: none;
      overflow: hidden;
      &:disabled {
        background-color: #fafafa;
      }
      &::placeholder {
        color: #c0c0c0;
      }
    }
    & > textarea,
    &::after {
      width: calc(100% - 24px);
      outline: none;
      border: none;
      background: none;
      font-size: 14px;
      font-weight: 400;
      z-index: 1;
      grid-area: 1 / 1 / 2 / 2;
      @include themify(color, "txtColor");
    }
  }
  &.error {
    & > div {
      border-color: #FF0000!important;
      & > label {
        color: #FF0000!important;
      }
    }
  }
  &.focused:not(.readOnly:not(.filled)), &.filled {
    & > div {
      & > label {
        transform: scale(0.9) translate3d(10px, -14px, 0);
      }
    }
  }
  &.focused:not(.readOnly:not(.filled)) {
    & > div {
      @include themify(border-color, "primary");
      & > label {
        @include themify(color, "primary");
      }
    }
  }
  & > span {
    color: #FF0000;
    font-size: 12px;
    margin-left: 10px;
  }
}
